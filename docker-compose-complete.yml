version: '3.9'

x-common-variables: &common-variables
  POSTGRES_DB: postgres
  POSTGRES_USER: admin
  PGUSER: admin
  POSTGRES_PASSWORD: 123
  TZ: "America/Sao_Paulo"

services:
  # https://medium.com/@eng.fadishaar/step-by-step-guide-configuring-nginx-with-https-on-localhost-for-secure-web-application-testing-c78febc26c78
  # https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-16-04
  nginx:
    image: nginx:latest
    container_name: go-app-nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - '9999:9999'
    depends_on:
      - app01
      - app02

  app01: &app
    build:
      context: .
      dockerfile: dockerfile
    container_name: go-app-1
    restart: unless-stopped
    environment:
      <<: *common-variables
      APP_PORT: 8080
      APP_NAME: GoBotApp
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      # Check the video below to learn how to use gmail smtp server to send emails
      # https://www.youtube.com/watch?v=g_j6ILT-X0k
      # SMTP_EMAIL: your gmail here
      # SMTP_PSWD: our gmail passphrase here
    ports: 
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  app02:
    <<: *app
    container_name: go-app-2

  db:
    image: postgres:latest
    container_name: go-app-postgres
    restart: unless-stopped
    environment:
      <<: *common-variables
      PGTZ: "America/Sao_Paulo"
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      # https://stackoverflow.com/questions/60193781/postgres-with-docker-compose-gives-fatal-role-root-does-not-exist-error
      test: "pg_isready -h db"
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
  pgadmin:
    container_name: go-app-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5433:80"
    volumes:
      # https://forums.docker.com/t/automatically-connect-pgadmin-to-a-postgresql-volume-on-which-there-is-a-database-and-automatically-load-a-schema-present-on-a-sql-file-with-docker-compose/124647/2
      - ./servers.json:/pgadmin4/servers.json
    restart: unless-stopped